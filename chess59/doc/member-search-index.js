memberSearchIndex = [{"p":"board","c":"Game","l":"activePiece(int[], int[], boolean)","u":"activePiece(int[],int[],boolean)"},{"p":"pieces","c":"Bishop","l":"Bishop(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"board","c":"Chess","l":"Chess()","u":"%3Cinit%3E()"},{"p":"pieces","c":"Piece","l":"enPass"},{"p":"board","c":"Game","l":"enPassPoss(boolean)"},{"p":"board","c":"Game","l":"Game()","u":"%3Cinit%3E()"},{"p":"board","c":"Game","l":"gameboard"},{"p":"board","c":"Game","l":"getKingCords(boolean)"},{"p":"board","c":"Game","l":"gettingIndex(String)","u":"gettingIndex(java.lang.String)"},{"p":"board","c":"Game","l":"inCheck(int[], boolean)","u":"inCheck(int[],boolean)"},{"p":"board","c":"Game","l":"inCheckmate(boolean)"},{"p":"pieces","c":"Piece","l":"isWhite"},{"p":"pieces","c":"King","l":"King(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"board","c":"Game","l":"kingPossibleMove(int[], int[], boolean)","u":"kingPossibleMove(int[],int[],boolean)"},{"p":"pieces","c":"Knight","l":"Knight(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"board","c":"Chess","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"pieces","c":"Pawn","l":"Pawn(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"pieces","c":"Piece","l":"Piece(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"pieces","c":"Queen","l":"Queen(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"board","c":"Game","l":"returnCheck()"},{"p":"pieces","c":"Rook","l":"Rook(boolean)","u":"%3Cinit%3E(boolean)"},{"p":"board","c":"Game","l":"simulateBoard()"},{"p":"pieces","c":"Bishop","l":"toString()"},{"p":"pieces","c":"King","l":"toString()"},{"p":"pieces","c":"Knight","l":"toString()"},{"p":"pieces","c":"Pawn","l":"toString()"},{"p":"pieces","c":"Queen","l":"toString()"},{"p":"pieces","c":"Rook","l":"toString()"},{"p":"board","c":"Chess","l":"validMove(String)","u":"validMove(java.lang.String)"},{"p":"pieces","c":"Bishop","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"},{"p":"pieces","c":"King","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"},{"p":"pieces","c":"Knight","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"},{"p":"pieces","c":"Pawn","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"},{"p":"pieces","c":"Piece","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"},{"p":"pieces","c":"Queen","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"},{"p":"pieces","c":"Rook","l":"whenLegal(int[], int[], Game)","u":"whenLegal(int[],int[],board.Game)"}];updateSearchResults();